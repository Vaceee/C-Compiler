First Set of the grammar:
int	['int']
ID	['ID']
void	['void']
$	['$']
;	[';']
(	['(']
)	[')']
,	[',']
{	['{']
}	['}']
=	['=']
return	['return']
while	['while']
if	['if']
else	['else']
>	['>']
<	['<']
==	['==']
>=	['>=']
<=	['<=']
!=	['!=']
+	['+']
-	['-']
*	['*']
/	['/']
NUM	['NUM']
P	['$', 'int', 'void']
declare_list	['int', 'void']
declare	['int', 'void']
A	['$']
var_declare	[';']
function_declare	['(']
parameter	['void', '$', 'int']
parameter_list	['int']
param	['int']
sentence_block	['{']
inner_declare	['$', 'int']
inner_var_declare	['int']
sentence_list	['if', 'while', 'return', 'ID']
sentence	['if', 'while', 'return', 'ID']
assign_sentence	['ID']
return_sentence	['return']
while_sentence	['while']
if_sentence	['if']
N	['$']
M	['$']
expression	['NUM', '(', 'ID']
add_expression	['NUM', '(', 'ID']
item	['NUM', '(', 'ID']
factor	['NUM', '(', 'ID']
argument_list	['$', 'NUM', '(', 'ID']
