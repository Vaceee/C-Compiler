Follow Set of the grammar:P	['#']
declare_list	['#']
declare	['int', 'void', '#']
A	['(', '{']
var_declare	['int', 'void', '#']
function_declare	['int', 'void', '#']
parameter	[')']
parameter_list	[')']
param	[')', ',']
sentence_block	['int', 'void', '#', '$', 'if', 'while', 'return', 'ID', '}', 'else']
inner_declare	['if', 'while', 'return', 'ID']
inner_var_declare	[';']
sentence_list	['}']
sentence	['$', 'if', 'while', 'return', 'ID', '}']
assign_sentence	['$', 'if', 'while', 'return', 'ID', '}']
return_sentence	['$', 'if', 'while', 'return', 'ID', '}']
while_sentence	['$', 'if', 'while', 'return', 'ID', '}']
if_sentence	['$', 'if', 'while', 'return', 'ID', '}']
N	['int', 'void', 'else']
M	['$', '(', 'if', 'while', 'return', 'ID', '{']
expression	[';', ')', ',']
add_expression	[';', ')', '>', '<', '==', '>=', '<=', '!=', ',']
item	[';', ')', '>', '<', '==', '>=', '<=', '!=', '+', '-', ',']
factor	[';', ')', '>', '<', '==', '>=', '<=', '!=', '+', '-', '*', '/', ',']
argument_list	[')']
