# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'compiler.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QGraphicsView,QGraphicsScene,QMessageBox,QFileDialog,QGraphicsPixmapItem
from grammar import *
from lexer import *
from Parser import *
import time


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(936, 716)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox_1 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_1.setGeometry(QtCore.QRect(32, 32, 201, 461))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_1.setFont(font)
        self.groupBox_1.setObjectName("groupBox_1")
        self.plainTextEdit_1 = QtWidgets.QPlainTextEdit(self.groupBox_1)
        self.plainTextEdit_1.setGeometry(QtCore.QRect(10, 20, 181, 391))
        self.plainTextEdit_1.setObjectName("plainTextEdit_1")
        self.pushButton_1 = QtWidgets.QPushButton(self.groupBox_1)
        self.pushButton_1.setGeometry(QtCore.QRect(90, 420, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_1.setFont(font)
        self.pushButton_1.setObjectName("pushButton_1")
        self.groupBox_4 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_4.setGeometry(QtCore.QRect(630, 30, 271, 461))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.graphicsView = QtWidgets.QGraphicsView(self.groupBox_4)
        self.graphicsView.setGeometry(QtCore.QRect(10, 20, 251, 391))
        self.graphicsView.setObjectName("graphicsView")
        self.pushButton_zoomout = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton_zoomout.setGeometry(QtCore.QRect(170, 420, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_zoomout.setFont(font)
        self.pushButton_zoomout.setObjectName("pushButton_zoomout")
        self.pushButton_zoomin = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton_zoomin.setGeometry(QtCore.QRect(68, 420, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_zoomin.setFont(font)
        self.pushButton_zoomin.setObjectName("pushButton_zoomin")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(242, 32, 171, 461))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.groupBox_2)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(10, 20, 151, 391))
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_2.setGeometry(QtCore.QRect(70, 420, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(423, 30, 201, 461))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.plainTextEdit_3 = QtWidgets.QPlainTextEdit(self.groupBox_3)
        self.plainTextEdit_3.setGeometry(QtCore.QRect(10, 20, 181, 391))
        self.plainTextEdit_3.setObjectName("plainTextEdit_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_3.setGeometry(QtCore.QRect(100, 420, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(30, 510, 871, 164))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox)
        self.textBrowser.setGeometry(QtCore.QRect(10, 20, 851, 131))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 936, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.pushButton_1.clicked.connect(self.grammarInput)
        self.pushButton_2.clicked.connect(self.codeInput)
        self.pushButton_3.clicked.connect(self.analysis)
        self.pushButton_zoomin.clicked.connect(self.imageZoomIn)
        self.pushButton_zoomout.clicked.connect(self.imageZoomOut)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.L = Lexer()
        self.G = Grammar()
        self.P = Parser()
        self.op = ''

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Compiler"))
        self.groupBox_1.setTitle(_translate("MainWindow", "语法输入"))
        self.pushButton_1.setText(_translate("MainWindow", "选择文件"))
        self.groupBox_4.setTitle(_translate("MainWindow", "语法树"))
        self.pushButton_zoomout.setText(_translate("MainWindow", "缩小"))
        self.pushButton_zoomin.setText(_translate("MainWindow", "放大"))
        self.groupBox_2.setTitle(_translate("MainWindow", "源代码"))
        self.pushButton_2.setText(_translate("MainWindow", "选择文件"))
        self.groupBox_3.setTitle(_translate("MainWindow", "词法及语法分析"))
        self.pushButton_3.setText(_translate("MainWindow", "执行分析"))
        self.groupBox.setTitle(_translate("MainWindow", "运行信息"))

    def grammarInput(self):
        self.grammar_file = QFileDialog.getOpenFileName(None,"选择语法文件","./grammar&code")[0]
        # QMessageBox.information(None,"prop",str(self.grammar_file))
        if self.grammar_file:
            with open(self.grammar_file,encoding='utf-8') as f:
                self.plainTextEdit_1.setPlainText(f.read())

    def codeInput(self):
        self.code_file = QFileDialog.getOpenFileName(None,"选择代码文件","./grammar&code","*.txt")[0]
        if self.code_file:
            with open(self.code_file,encoding='utf-8') as f:
                self.plainTextEdit_2.setPlainText(f.read())

    def lex_analysis(self, file):
        self.L = Lexer()
        if file == '':
            file = './grammar&code/Code.txt'
        try:
            t = time.time()
            self.textBrowser.append("正在进行词法分析...\n")
            self.L.configure(file)
            self.textBrowser.append("词法分析已完成，用时"+"{:.4f}s\n".format((time.time() - t)))

        except Exception as e:
            print(e)

    def grammar_analysis(self, file):
        self.G = Grammar()
        if file == '':
            file = './grammar&code/Grammar.txt'
        try:
            t = time.time()
            self.textBrowser.append("开始构建Follow集和First集...\n")
            self.G.configure(file)
            self.textBrowser.append("First集和Follow集构建完成，用时"+"{:.4f}s\n".format((time.time() - t)))

            t = time.time()
            self.P.configure(self.G)

            t = time.time()
            self.textBrowser.append("开始构建自动机和状态转移表...\n")
            self.P.update_parse()
            self.textBrowser.append("自动机和状态转移表构建完成，结果保留在output文件夹中的Automata.txt,ActionTable.txt和GotoTable.txt中，用时"+"{:.4f}s\n".format((time.time() - t)))
        except Exception as e:
            print(e)

    def analysis(self):
        try:
            self.lex_analysis(self.code_file)
            self.grammar_analysis(self.grammar_file)
            self.P.parse(self.L.output)
            with open("./output/ActionTable.txt") as f:
                self.plainTextEdit_3.appendPlainText("Action Table")
                self.plainTextEdit_3.appendPlainText(f.read())
            with open("./output/GotoTable.txt") as f:
                self.plainTextEdit_3.appendPlainText("Goto Table")
                self.plainTextEdit_3.appendPlainText(f.read())
            with open("./output/Analysis_Result.txt") as f:
                self.plainTextEdit_3.appendPlainText("Analysis Result")
                self.plainTextEdit_3.appendPlainText(f.read())
            self.treeImage = QGraphicsPixmapItem(QtGui.QPixmap('./output/GrammarTree.png'))
            # self.treeImage = QtGui.QPixmap('./output/GrammarTree.png')
            self.zoomscale = 1
            scene = QGraphicsScene()
            scene.addItem(self.treeImage)
            self.graphicsView.setScene(scene)
            self.graphicsView.show()

        except Exception as e:
            self.textBrowser.append(str(e))


    def imageZoomIn(self):
        self.zoomscale+=0.05
        if self.zoomscale>=1.2:
           self.zoomscale=1.2
        self.treeImage.setScale(self.zoomscale)

    def imageZoomOut(self):
        self.zoomscale-=0.05
        if self.zoomscale<=0.2:
           self.zoomscale=0.2
        self.treeImage.setScale(self.zoomscale)